import { NgModule } from '@angular/core';
import { NgChartjsDirective } from './ng-chartjs.directive';
import { NgChartjsService } from './ng-chartjs.service';
import { NgChartjsCustomPluginConfig } from './plugins-config';
import * as i0 from "@angular/core";
export class NgChartjsModule {
    /**
     * Register a plugin.
     * @param plugins
     */
    static registerPlugin(plugins = []) {
        const config = new NgChartjsCustomPluginConfig();
        config.plugins = plugins;
        return {
            ngModule: NgChartjsModule,
            providers: [
                {
                    provide: NgChartjsCustomPluginConfig,
                    useValue: config
                }
            ]
        };
    }
}
NgChartjsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: NgChartjsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgChartjsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: NgChartjsModule, declarations: [NgChartjsDirective], exports: [NgChartjsDirective] });
NgChartjsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: NgChartjsModule, providers: [NgChartjsService], imports: [[]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: NgChartjsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [],
                    declarations: [NgChartjsDirective],
                    exports: [NgChartjsDirective],
                    providers: [NgChartjsService]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY2hhcnRqcy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1jaGFydGpzL3NyYy9saWIvbmctY2hhcnRqcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUQsTUFBTSxlQUFlLENBQUM7QUFFOUYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBUS9ELE1BQU0sT0FBTyxlQUFlO0lBQzFCOzs7T0FHRztJQUNJLE1BQU0sQ0FBQyxjQUFjLENBQUMsVUFBZ0MsRUFBRTtRQUM3RCxNQUFNLE1BQU0sR0FBRyxJQUFJLDJCQUEyQixFQUFFLENBQUM7UUFDakQsTUFBTSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFFekIsT0FBTztZQUNMLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsMkJBQTJCO29CQUNwQyxRQUFRLEVBQUUsTUFBTTtpQkFDakI7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs2R0FsQlUsZUFBZTs4R0FBZixlQUFlLGlCQUpYLGtCQUFrQixhQUN2QixrQkFBa0I7OEdBR2pCLGVBQWUsYUFGZixDQUFDLGdCQUFnQixDQUFDLFlBSHBCLEVBQUU7NEZBS0EsZUFBZTtrQkFOM0IsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsRUFBRTtvQkFDWCxZQUFZLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztvQkFDbEMsT0FBTyxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQzdCLFNBQVMsRUFBRSxDQUFDLGdCQUFnQixDQUFDO2lCQUM5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBPcHRpb25hbCwgU2tpcFNlbGYsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENoYXJ0Q29tcG9uZW50TGlrZSB9IGZyb20gJ2NoYXJ0LmpzJztcbmltcG9ydCB7IE5nQ2hhcnRqc0RpcmVjdGl2ZSB9IGZyb20gJy4vbmctY2hhcnRqcy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTmdDaGFydGpzU2VydmljZSB9IGZyb20gJy4vbmctY2hhcnRqcy5zZXJ2aWNlJztcbmltcG9ydCB7IE5nQ2hhcnRqc0N1c3RvbVBsdWdpbkNvbmZpZyB9IGZyb20gJy4vcGx1Z2lucy1jb25maWcnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXSxcbiAgZGVjbGFyYXRpb25zOiBbTmdDaGFydGpzRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW05nQ2hhcnRqc0RpcmVjdGl2ZV0sXG4gIHByb3ZpZGVyczogW05nQ2hhcnRqc1NlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIE5nQ2hhcnRqc01vZHVsZSB7XG4gIC8qKlxuICAgKiBSZWdpc3RlciBhIHBsdWdpbi5cbiAgICogQHBhcmFtIHBsdWdpbnNcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgcmVnaXN0ZXJQbHVnaW4ocGx1Z2luczogQ2hhcnRDb21wb25lbnRMaWtlW10gPSBbXSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TmdDaGFydGpzTW9kdWxlPiB7XG4gICAgY29uc3QgY29uZmlnID0gbmV3IE5nQ2hhcnRqc0N1c3RvbVBsdWdpbkNvbmZpZygpO1xuICAgIGNvbmZpZy5wbHVnaW5zID0gcGx1Z2lucztcblxuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmdDaGFydGpzTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBOZ0NoYXJ0anNDdXN0b21QbHVnaW5Db25maWcsXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZ1xuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19