import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class StoreService {
    constructor() {
        this._chartInstances = [];
        this._chartId = [];
    }
    addChart(id, chart) {
        for (let i = 0; i < this._chartId.length; i++) {
            if (id === this._chartId[i]) {
                return;
            }
        }
        this._chartId.push(id);
        this._chartInstances.push(chart);
    }
    removeChart(id) {
        for (let i = 0; i < this._chartId.length; i++) {
            if (id === this._chartId[i]) {
                this._chartId.splice(i, 1);
                this._chartInstances.splice(i, 1); // delete chart instance.
            }
        }
    }
    getChart(id) {
        for (let i = 0; i < this._chartId.length; i++) {
            if (id === this._chartId[i]) {
                return this._chartInstances[i];
            }
        }
        return null;
    }
}
StoreService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: StoreService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
StoreService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: StoreService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: StoreService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWNoYXJ0anMvc3JjL2xpYi9zdG9yZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSzNDLE1BQU0sT0FBTyxZQUFZO0lBSHpCO1FBSVUsb0JBQWUsR0FBVSxFQUFFLENBQUM7UUFDNUIsYUFBUSxHQUFhLEVBQUUsQ0FBQztLQTZCakM7SUEzQkMsUUFBUSxDQUFDLEVBQVUsRUFBRSxLQUFVO1FBQzdCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM3QyxJQUFJLEVBQUUsS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMzQixPQUFPO2FBQ1I7U0FDRjtRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxXQUFXLENBQUMsRUFBVTtRQUNwQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0MsSUFBSSxFQUFFLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUMzQixJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBRSx5QkFBeUI7YUFDOUQ7U0FDRjtJQUNILENBQUM7SUFFRCxRQUFRLENBQUMsRUFBVTtRQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0MsSUFBSSxFQUFFLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDM0IsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ2hDO1NBQ0Y7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7OzBHQTlCVSxZQUFZOzhHQUFaLFlBQVksY0FGWCxNQUFNOzRGQUVQLFlBQVk7a0JBSHhCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBTdG9yZVNlcnZpY2Uge1xuICBwcml2YXRlIF9jaGFydEluc3RhbmNlczogYW55W10gPSBbXTtcbiAgcHJpdmF0ZSBfY2hhcnRJZDogc3RyaW5nW10gPSBbXTtcblxuICBhZGRDaGFydChpZDogc3RyaW5nLCBjaGFydDogYW55KTogdm9pZCB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9jaGFydElkLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoaWQgPT09IHRoaXMuX2NoYXJ0SWRbaV0pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLl9jaGFydElkLnB1c2goaWQpO1xuICAgIHRoaXMuX2NoYXJ0SW5zdGFuY2VzLnB1c2goY2hhcnQpO1xuICB9XG5cbiAgcmVtb3ZlQ2hhcnQoaWQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fY2hhcnRJZC5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGlkID09PSB0aGlzLl9jaGFydElkW2ldKSB7XG4gICAgICAgIHRoaXMuX2NoYXJ0SWQuc3BsaWNlKGksIDEpO1xuICAgICAgICB0aGlzLl9jaGFydEluc3RhbmNlcy5zcGxpY2UoaSwgMSk7ICAvLyBkZWxldGUgY2hhcnQgaW5zdGFuY2UuXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0Q2hhcnQoaWQ6IHN0cmluZyk6IGFueSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9jaGFydElkLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoaWQgPT09IHRoaXMuX2NoYXJ0SWRbaV0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NoYXJ0SW5zdGFuY2VzW2ldO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuIl19